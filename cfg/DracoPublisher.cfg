#! /usr/bin/env python

PACKAGE='draco_point_cloud_transport'

from dynamic_reconfigure.parameter_generator_catkin import *

gen = ParameterGenerator()



gen.add("encode_speed", int_t,   0, "0 = slowest speed, but the best compression 10 = fastest, but the worst compression.",  7, 0, 10)
gen.add("decode_speed", int_t, 0, "0 = slowest speed, but the best compression 10 = fastest, but the worst compression.",  7, 0, 10)

method_enum = gen.enum([ gen.const("Auto",    int_t, 0, "Draco chooses appropriate compression"),
                       gen.const("KD_tree",     int_t, 1, "Force KD-tree"),
                       gen.const("Sequential",      int_t, 2, "Force Sequential")],
                     "An enum to set method of encoding")

gen.add("encode_method", int_t, 0, "Encoding process method, 0 = auto, 1 = KD-tree, 2 = sequential", 0, 0, 2, edit_method=method_enum)

#deduplicate_enum = gen.enum([ gen.const("Deduplication_OFF", bool_t, False, "Do NOT remove duplicate point entries."),
#                       gen.const("DEDUPLICATION_ON",     bool_t, True, "Remove duplicate point entries.")],
#                     "An enum to enable/disable deduplication of point entries")

gen.add("deduplicate",  bool_t, 0, "Remove duplicate point entries.", True)#, edit_method=deduplicate_enum)

#force_quantization_enum = gen.enum([ gen.const("Quantization_OFF", bool_t, False, "Do NOT quantize attribute values."),
#                       gen.const("Quantization_ON",     bool_t, True, "Quantize attribute values.")],
#                     "An enum to enable/disable quantization of attribute values")

gen.add("force_quantization", bool_t, 0, "Force attribute quantization. Attributes of type float32 must be quantized for kd-tree encoding.", True)#, edit_method=force_quantization_enum)

gen.add("quantization_POSITION", int_t, 0, "Number of bits for quantization of POSITION type attributes.",  14, 1, 31)
gen.add("quantization_NORMAL",  int_t, 0, "Number of bits for quantization of NORMAL type attributes.",  14, 1, 31)
gen.add("quantization_COLOR",  int_t, 0, "Number of bits for quantization of COLOR type attributes.",  14, 1, 31)
gen.add("quantization_TEX_COORD",  int_t, 0, "Number of bits for quantization of TEX_COORD type attributes.",  14, 1, 31)
gen.add("quantization_GENERIC",  int_t, 0, "Number of bits for quantization of GENERIC type attributes.",  14, 1, 31)

gen.add("expert_encoding",  bool_t, 0, "WARNING: Apply user specified quantization and attribute types for PointField entries. User must specify all entries at parameter server.", False)

exit(gen.generate(PACKAGE, "DracoPublisher", "DracoPublisher"))
